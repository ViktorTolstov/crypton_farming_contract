/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Farming, FarmingInterface } from "../Farming";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "HUNDRED_PERCENT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "amountOfEpochs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "epochDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_percentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_epochDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountOfEpochs",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "percentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokensLeft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "depositTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610dfa380380610dfa83398101604081905261002f91610087565b600080546001600160a01b03199081163317909155600180546001600160a01b03948516908316179055600280549290931691161790556100ba565b80516001600160a01b038116811461008257600080fd5b919050565b6000806040838503121561009a57600080fd5b6100a38361006b565b91506100b16020840161006b565b90509250929050565b610d31806100c96000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063c78ad77f11610066578063c78ad77f14610200578063dcbab60814610209578063f7c618c11461021c578063f93804351461022f57600080fd5b80638da5cb5b14610182578063a87430ba14610195578063b31f8f93146101e4578063b6b55f25146101ed57600080fd5b80634ff0876a116100d35780634ff0876a1461012e5780636ed93dd01461014557806372f702f31461014e57806378e979251461017957600080fd5b8063158ef93e146100fa578063372500ab1461011c5780633ccfd60b14610126575b600080fd5b6008546101079060ff1681565b60405190151581526020015b60405180910390f35b610124610238565b005b6101246103fd565b61013760065481565b604051908152602001610113565b61013761271081565b600154610161906001600160a01b031681565b6040516001600160a01b039091168152602001610113565b61013760055481565b600054610161906001600160a01b031681565b6101c76101a3366004610b90565b60096020526000908152604090208054600182015460029092015490919060ff1683565b604080519384526020840192909252151590820152606001610113565b61013760035481565b6101246101fb366004610bc0565b610536565b61013760045481565b610124610217366004610bd9565b61068e565b600254610161906001600160a01b031681565b61013760075481565b336000908152600960205260409020600281015460ff16156102a15760405162461bcd60e51b815260206004820152601760248201527f5265776172647320616c726561647920636c61696d656400000000000000000060448201526064015b60405180910390fd5b80546102ef5760405162461bcd60e51b815260206004820152601260248201527f4e6f20746f6b656e7320746f20636c61696d00000000000000000000000000006044820152606401610298565b600181015460006103008242610c2a565b90506000600654826103129190610c43565b90506007548110156103665760405162461bcd60e51b815260206004820152601860248201527f45706f636873206e6f7420636f6d706c657465642079657400000000000000006044820152606401610298565b600061271060075460045487600001546103809190610c65565b61038a9190610c65565b6103949190610c43565b6002808701805460ff19166001179055549091506103bc906001600160a01b0316338361082e565b60408051338152602081018390527fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a91015b60405180910390a15050505050565b336000908152600960205260409020805461045a5760405162461bcd60e51b815260206004820152601560248201527f4e6f20746f6b656e7320746f20776974686472617700000000000000000000006044820152606401610298565b6001810154600061046b8242610c2a565b905060006006548261047d9190610c43565b90506007548110156104d15760405162461bcd60e51b815260206004820152601860248201527f45706f636873206e6f7420636f6d706c657465642079657400000000000000006044820152606401610298565b83546000808655600380548392906104ea908490610c7c565b9091555050600154610506906001600160a01b0316338361082e565b6040513381527ff67611512e0a2d90c96fd3f08dca4971bc45fba9dc679eabe839a32abbe58a8e906020016103ee565b4260055411156105885760405162461bcd60e51b815260206004820152601660248201527f4661726d696e67206973206e6f742075702079657421000000000000000000006044820152606401610298565b6003548111156105da5760405162461bcd60e51b815260206004820152601b60248201527f546f6f206d616e7920746f6b656e7320636f6e747269627574656400000000006044820152606401610298565b60408051606081018252828152426020808301918252600083850181815233825260099092529384209251835590516001830155516002909101805460ff191691151591909117905560038054839290610635908490610c2a565b9091555050600154610652906001600160a01b03163330846108c3565b60408051338152602081018390527f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4910160405180910390a150565b6000546001600160a01b031633146106e85760405162461bcd60e51b815260206004820152600c60248201527f4e6f7420616e206f776e657200000000000000000000000000000000000000006044820152606401610298565b60085460ff161561073b5760405162461bcd60e51b815260206004820152601360248201527f416c726561647920696e697469616c697a6564000000000000000000000000006044820152606401610298565b6008805460ff19166001179055600385905560048490556005819055600782905560068390556002546001600160a01b03166323b872dd3330612710866107828a8c610c65565b61078c9190610c65565b6107969190610c43565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610802573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108269190610c8f565b505050505050565b6040516001600160a01b0383166024820152604481018290526108be90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610901565b505050565b6040516001600160a01b03808516602483015283166044820152606481018290526108fb9085906323b872dd60e01b9060840161085a565b50505050565b6000610956826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166109e99092919063ffffffff16565b90508051600014806109775750808060200190518101906109779190610c8f565b6108be5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610298565b60606109f88484600085610a00565b949350505050565b606082471015610a785760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610298565b600080866001600160a01b03168587604051610a949190610cd5565b60006040518083038185875af1925050503d8060008114610ad1576040519150601f19603f3d011682016040523d82523d6000602084013e610ad6565b606091505b5091509150610ae787838387610af2565b979650505050505050565b60608315610b61578251600003610b5a576001600160a01b0385163b610b5a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610298565b50816109f8565b6109f88383815115610b765781518083602001fd5b8060405162461bcd60e51b81526004016102989190610cf1565b600060208284031215610ba257600080fd5b81356001600160a01b0381168114610bb957600080fd5b9392505050565b600060208284031215610bd257600080fd5b5035919050565b600080600080600060a08688031215610bf157600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610c3d57610c3d610c14565b92915050565b600082610c6057634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610c3d57610c3d610c14565b80820180821115610c3d57610c3d610c14565b600060208284031215610ca157600080fd5b81518015158114610bb957600080fd5b60005b83811015610ccc578181015183820152602001610cb4565b50506000910152565b60008251610ce7818460208701610cb1565b9190910192915050565b6020815260008251806020840152610d10816040850160208701610cb1565b601f01601f1916919091016040019291505056fea164736f6c6343000813000a";

export class Farming__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _stakingToken: string,
    _rewardToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Farming> {
    return super.deploy(
      _stakingToken,
      _rewardToken,
      overrides || {}
    ) as Promise<Farming>;
  }
  getDeployTransaction(
    _stakingToken: string,
    _rewardToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stakingToken,
      _rewardToken,
      overrides || {}
    );
  }
  attach(address: string): Farming {
    return super.attach(address) as Farming;
  }
  connect(signer: Signer): Farming__factory {
    return super.connect(signer) as Farming__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FarmingInterface {
    return new utils.Interface(_abi) as FarmingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Farming {
    return new Contract(address, _abi, signerOrProvider) as Farming;
  }
}
